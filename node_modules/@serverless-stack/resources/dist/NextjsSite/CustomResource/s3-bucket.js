"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const AWS = __importStar(require("aws-sdk"));
AWS.config.logger = console;
const util_1 = require("./util");
const cfnResponse = __importStar(require("./cfn-response"));
const s3 = new AWS.S3({ region: "us-east-1" });
function handler(cfnRequest) {
    return __awaiter(this, void 0, void 0, function* () {
        (0, util_1.log)("onEventHandler", cfnRequest);
        // Get bucket name
        const bucketName = cfnRequest.RequestType === "Create"
            ? generateBucketName(cfnRequest.ResourceProperties.BucketNamePrefix)
            : cfnRequest.PhysicalResourceId;
        // Process request
        let responseData;
        switch (cfnRequest.RequestType) {
            case 'Create':
                yield createBucket(bucketName);
                responseData = {
                    BucketName: bucketName,
                };
                break;
            case 'Update':
                break;
            case 'Delete':
                yield emptyBucket(bucketName);
                yield deleteBucket(bucketName);
                break;
            default:
                throw new Error("Unsupported request type");
        }
        // Build response
        return cfnResponse.submitResponse("SUCCESS", Object.assign(Object.assign({}, cfnRequest), { PhysicalResourceId: bucketName, Data: responseData }));
    });
}
function createBucket(bucketName) {
    return __awaiter(this, void 0, void 0, function* () {
        (0, util_1.log)(`createBucket() called with bucketName`, bucketName);
        const resp = yield s3.createBucket({
            Bucket: bucketName,
        }).promise();
        (0, util_1.log)(`response`, resp);
    });
}
function deleteBucket(bucketName) {
    return __awaiter(this, void 0, void 0, function* () {
        (0, util_1.log)(`deleteBucket() called with bucketName`, bucketName);
        const resp = yield s3.deleteBucket({
            Bucket: bucketName,
        }).promise();
        (0, util_1.log)(`response`, resp);
    });
}
function generateBucketName(prefix) {
    const MAX_NAME_LENGTH = 63;
    const length = 20;
    const characters = 'abcdefghijklmnopqrstuvwxyz';
    const charactersLength = characters.length;
    let result = `${prefix.toLowerCase().slice(0, MAX_NAME_LENGTH - length - 1)}-`;
    for (let i = 0; i < length; i++) {
        result += characters.charAt(Math.floor(Math.random() * charactersLength));
    }
    return result;
}
////////////////
// @aws-cdk/aws-s3/lib/auto-delete-objectshandler
////////////////
function emptyBucket(bucketName) {
    var _a, _b;
    return __awaiter(this, void 0, void 0, function* () {
        const listedObjects = yield s3.listObjectVersions({ Bucket: bucketName }).promise();
        const contents = [...(_a = listedObjects.Versions) !== null && _a !== void 0 ? _a : [], ...(_b = listedObjects.DeleteMarkers) !== null && _b !== void 0 ? _b : []];
        if (contents.length === 0) {
            return;
        }
        const records = contents.map((record) => ({ Key: record.Key, VersionId: record.VersionId }));
        yield s3.deleteObjects({ Bucket: bucketName, Delete: { Objects: records } }).promise();
        if (listedObjects === null || listedObjects === void 0 ? void 0 : listedObjects.IsTruncated) {
            yield emptyBucket(bucketName);
        }
    });
}
module.exports = {
    handler: cfnResponse.safeHandler(handler),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiczMtYnVja2V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL05leHRqc1NpdGUvQ3VzdG9tUmVzb3VyY2UvczMtYnVja2V0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkNBQStCO0FBQy9CLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQztBQUU1QixpQ0FBNkI7QUFDN0IsNERBQThDO0FBQzlDLE1BQU0sRUFBRSxHQUFHLElBQUksR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsQ0FBQyxDQUFDO0FBTS9DLFNBQWUsT0FBTyxDQUNwQixVQUF1RDs7UUFFdkQsSUFBQSxVQUFHLEVBQUMsZ0JBQWdCLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFFbEMsa0JBQWtCO1FBQ2xCLE1BQU0sVUFBVSxHQUFHLFVBQVUsQ0FBQyxXQUFXLEtBQUssUUFBUTtZQUNwRCxDQUFDLENBQUMsa0JBQWtCLENBQUMsVUFBVSxDQUFDLGtCQUFrQixDQUFDLGdCQUFnQixDQUFDO1lBQ3BFLENBQUMsQ0FBQyxVQUFVLENBQUMsa0JBQWtCLENBQUM7UUFFbEMsa0JBQWtCO1FBQ2xCLElBQUksWUFBWSxDQUFDO1FBQ2pCLFFBQVEsVUFBVSxDQUFDLFdBQVcsRUFBRTtZQUM5QixLQUFLLFFBQVE7Z0JBQ1gsTUFBTSxZQUFZLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQy9CLFlBQVksR0FBRztvQkFDYixVQUFVLEVBQUUsVUFBVTtpQkFDdkIsQ0FBQTtnQkFDRCxNQUFNO1lBQ1IsS0FBSyxRQUFRO2dCQUNYLE1BQU07WUFDUixLQUFLLFFBQVE7Z0JBQ1gsTUFBTSxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQzlCLE1BQU0sWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2dCQUMvQixNQUFNO1lBQ1I7Z0JBQ0UsTUFBTSxJQUFJLEtBQUss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LENBQUM7U0FDL0I7O0NBQ0Y7QUF6RkQsaUJBQVM7SUFDUCxPQUFPLEVBQUUsV0FBVyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUM7Q0FDMUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFXUyBmcm9tIFwiYXdzLXNka1wiO1xuQVdTLmNvbmZpZy5sb2dnZXIgPSBjb25zb2xlO1xuXG5pbXBvcnQgeyBsb2cgfSBmcm9tIFwiLi91dGlsXCI7XG5pbXBvcnQgKiBhcyBjZm5SZXNwb25zZSBmcm9tIFwiLi9jZm4tcmVzcG9uc2VcIjtcbmNvbnN0IHMzID0gbmV3IEFXUy5TMyh7IHJlZ2lvbjogXCJ1cy1lYXN0LTFcIiB9KTtcblxuZXhwb3J0ID0ge1xuICBoYW5kbGVyOiBjZm5SZXNwb25zZS5zYWZlSGFuZGxlcihoYW5kbGVyKSxcbn07XG5cbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIoXG4gIGNmblJlcXVlc3Q6IEFXU0xhbWJkYS5DbG91ZEZvcm1hdGlvbkN1c3RvbVJlc291cmNlRXZlbnRcbikge1xuICBsb2coXCJvbkV2ZW50SGFuZGxlclwiLCBjZm5SZXF1ZXN0KTtcblxuICAvLyBHZXQgYnVja2V0IG5hbWVcbiAgY29uc3QgYnVja2V0TmFtZSA9IGNmblJlcXVlc3QuUmVxdWVzdFR5cGUgPT09IFwiQ3JlYXRlXCJcbiAgICA/IGdlbmVyYXRlQnVja2V0TmFtZShjZm5SZXF1ZXN0LlJlc291cmNlUHJvcGVydGllcy5CdWNrZXROYW1lUHJlZml4KVxuICAgIDogY2ZuUmVxdWVzdC5QaHlzaWNhbFJlc291cmNlSWQ7XG5cbiAgLy8gUHJvY2VzcyByZXF1ZXN0XG4gIGxldCByZXNwb25zZURhdGE7XG4gIHN3aXRjaCAoY2ZuUmVxdWVzdC5SZXF1ZXN0VHlwZSkge1xuICAgIGNhc2UgJ0NyZWF0ZSc6XG4gICAgICBhd2FpdCBjcmVhdGVCdWNrZXQoYnVja2V0TmFtZSk7XG4gICAgICByZXNwb25zZURhdGEgPSB7XG4gICAgICAgIEJ1Y2tldE5hbWU6IGJ1Y2tldE5hbWUsXG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBjYXNlICdVcGRhdGUnOlxuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnRGVsZXRlJzpcbiAgICAgIGF3YWl0IGVtcHR5QnVja2V0KGJ1Y2tldE5hbWUpO1xuICAgICAgYXdhaXQgZGVsZXRlQnVja2V0KGJ1Y2tldE5hbWUpO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIHJlcXVlc3QgdHlwZVwiKTtcbiAgfVxuXG4gIC8vIEJ1aWxkIHJlc3BvbnNlXG4gIHJldHVybiBjZm5SZXNwb25zZS5zdWJtaXRSZXNwb25zZShcIlNVQ0NFU1NcIiwge1xuICAgIC4uLmNmblJlcXVlc3QsXG4gICAgUGh5c2ljYWxSZXNvdXJjZUlkOiBidWNrZXROYW1lLFxuICAgIERhdGE6IHJlc3BvbnNlRGF0YSxcbiAgfSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUJ1Y2tldChidWNrZXROYW1lOiBzdHJpbmcpIHtcbiAgbG9nKGBjcmVhdGVCdWNrZXQoKSBjYWxsZWQgd2l0aCBidWNrZXROYW1lYCwgYnVja2V0TmFtZSk7XG5cbiAgY29uc3QgcmVzcCA9IGF3YWl0IHMzLmNyZWF0ZUJ1Y2tldCh7XG4gICAgQnVja2V0OiBidWNrZXROYW1lLFxuICB9KS5wcm9taXNlKCk7XG5cbiAgbG9nKGByZXNwb25zZWAsIHJlc3ApO1xufVxuXG5hc3luYyBmdW5jdGlvbiBkZWxldGVCdWNrZXQoYnVja2V0TmFtZTogc3RyaW5nKSB7XG4gIGxvZyhgZGVsZXRlQnVja2V0KCkgY2FsbGVkIHdpdGggYnVja2V0TmFtZWAsIGJ1Y2tldE5hbWUpO1xuXG4gIGNvbnN0IHJlc3AgPSBhd2FpdCBzMy5kZWxldGVCdWNrZXQoe1xuICAgIEJ1Y2tldDogYnVja2V0TmFtZSxcbiAgfSkucHJvbWlzZSgpO1xuXG4gIGxvZyhgcmVzcG9uc2VgLCByZXNwKTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVCdWNrZXROYW1lKHByZWZpeDogc3RyaW5nKSB7XG4gIGNvbnN0IE1BWF9OQU1FX0xFTkdUSCA9IDYzO1xuICBjb25zdCBsZW5ndGggPSAyMDtcbiAgY29uc3QgY2hhcmFjdGVycyA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eic7XG4gIGNvbnN0IGNoYXJhY3RlcnNMZW5ndGggPSBjaGFyYWN0ZXJzLmxlbmd0aDtcbiAgbGV0IHJlc3VsdCA9IGAke3ByZWZpeC50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsIE1BWF9OQU1FX0xFTkdUSCAtIGxlbmd0aCAtIDEpfS1gO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgcmVzdWx0ICs9IGNoYXJhY3RlcnMuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNoYXJhY3RlcnNMZW5ndGgpKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vLy8vLy8vLy8vLy8vLy8vXG4vLyBAYXdzLWNkay9hd3MtczMvbGliL2F1dG8tZGVsZXRlLW9iamVjdHNoYW5kbGVyXG4vLy8vLy8vLy8vLy8vLy8vXG5hc3luYyBmdW5jdGlvbiBlbXB0eUJ1Y2tldChidWNrZXROYW1lOiBzdHJpbmcpIHtcbiAgY29uc3QgbGlzdGVkT2JqZWN0cyA9IGF3YWl0IHMzLmxpc3RPYmplY3RWZXJzaW9ucyh7IEJ1Y2tldDogYnVja2V0TmFtZSB9KS5wcm9taXNlKCk7XG4gIGNvbnN0IGNvbnRlbnRzID0gWy4uLmxpc3RlZE9iamVjdHMuVmVyc2lvbnMgPz8gW10sIC4uLmxpc3RlZE9iamVjdHMuRGVsZXRlTWFya2VycyA/PyBbXV07XG4gIGlmIChjb250ZW50cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCByZWNvcmRzID0gY29udGVudHMubWFwKChyZWNvcmQ6IGFueSkgPT4gKHsgS2V5OiByZWNvcmQuS2V5LCBWZXJzaW9uSWQ6IHJlY29yZC5WZXJzaW9uSWQgfSkpO1xuICBhd2FpdCBzMy5kZWxldGVPYmplY3RzKHsgQnVja2V0OiBidWNrZXROYW1lLCBEZWxldGU6IHsgT2JqZWN0czogcmVjb3JkcyB9IH0pLnByb21pc2UoKTtcblxuICBpZiAobGlzdGVkT2JqZWN0cz8uSXNUcnVuY2F0ZWQpIHtcbiAgICBhd2FpdCBlbXB0eUJ1Y2tldChidWNrZXROYW1lKTtcbiAgfVxufVxuIl19