{
  "Resources": {
    "TableCD117FA1": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "pk",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "pk",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Table/Resource"
      }
    },
    "Bucket83908E77": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "ExpirationInDays": 1,
              "Prefix": "payloads/",
              "Status": "Enabled"
            }
          ]
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Bucket/Resource"
      }
    },
    "BucketPolicyE9A3008A": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "Bucket83908E77"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Bucket/Policy/Resource"
      }
    },
    "BucketAutoDeleteObjectsCustomResourceBAFD23C2": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "Bucket83908E77"
        }
      },
      "DependsOn": [
        "BucketPolicyE9A3008A"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Bucket/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3Bucket4842F32D"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3VersionKeyD0A0B57A"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3VersionKeyD0A0B57A"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "Bucket83908E77"
              },
              " S3 bucket."
            ]
          ]
        }
      },
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
      ],
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler"
      }
    },
    "Api": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "admin-notes-debug-stack-api",
        "ProtocolType": "WEBSOCKET",
        "RouteSelectionExpression": "$request.body.action"
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Api"
      }
    },
    "ApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "Api"
        },
        "StageName": "admin",
        "AutoDeploy": true
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/ApiStage"
      }
    },
    "ConnectServiceRole07B61CE8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Connect/ServiceRole/Resource"
      }
    },
    "ConnectServiceRoleDefaultPolicyCE008EDB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "apigateway:*",
                "dynamodb:*",
                "execute-api:ManageConnections"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ConnectServiceRoleDefaultPolicyCE008EDB",
        "Roles": [
          {
            "Ref": "ConnectServiceRole07B61CE8"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Connect/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "Connect5B7625CA": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4S3Bucket40E0E393"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4S3VersionKey32A15DAE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4S3VersionKey32A15DAE"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "ConnectServiceRole07B61CE8",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "TableCD117FA1"
            }
          }
        },
        "Handler": "wsConnect.main",
        "MemorySize": 256,
        "Runtime": "nodejs12.x",
        "Timeout": 10
      },
      "DependsOn": [
        "ConnectServiceRoleDefaultPolicyCE008EDB",
        "ConnectServiceRole07B61CE8"
      ],
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Connect/Resource",
        "aws:asset:path": "asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4",
        "aws:asset:property": "Code"
      }
    },
    "ConnectLogRetentionC1F463CD": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "Connect5B7625CA"
              }
            ]
          ]
        },
        "RetentionInDays": 7
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Connect/LogRetention/Resource"
      }
    },
    "ConnectConnectPermission9DBC7813": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Connect5B7625CA",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Connect/ConnectPermission"
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersb120b13d9d868c7622e7db1b68bae4c0f82ffd0227b8c15f2cef38e186ff3827S3Bucket2070BA0A"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb120b13d9d868c7622e7db1b68bae4c0f82ffd0227b8c15f2cef38e186ff3827S3VersionKeyB95D17C3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb120b13d9d868c7622e7db1b68bae4c0f82ffd0227b8c15f2cef38e186ff3827S3VersionKeyB95D17C3"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
      ],
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource"
      }
    },
    "ConnectIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "Api"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "Connect5B7625CA",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/ConnectIntegration"
      }
    },
    "ConnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "Api"
        },
        "RouteKey": "$connect",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "ConnectIntegration"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/ConnectRoute"
      }
    },
    "DisconnectServiceRole90AEC2EB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Disconnect/ServiceRole/Resource"
      }
    },
    "DisconnectServiceRoleDefaultPolicy32856207": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "apigateway:*",
                "dynamodb:*",
                "execute-api:ManageConnections"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DisconnectServiceRoleDefaultPolicy32856207",
        "Roles": [
          {
            "Ref": "DisconnectServiceRole90AEC2EB"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Disconnect/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "Disconnect7D6B12BD": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4S3Bucket40E0E393"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4S3VersionKey32A15DAE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4S3VersionKey32A15DAE"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "DisconnectServiceRole90AEC2EB",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "TableCD117FA1"
            }
          }
        },
        "Handler": "wsDisconnect.main",
        "MemorySize": 256,
        "Runtime": "nodejs12.x",
        "Timeout": 10
      },
      "DependsOn": [
        "DisconnectServiceRoleDefaultPolicy32856207",
        "DisconnectServiceRole90AEC2EB"
      ],
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Disconnect/Resource",
        "aws:asset:path": "asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4",
        "aws:asset:property": "Code"
      }
    },
    "DisconnectLogRetentionE61D7937": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "Disconnect7D6B12BD"
              }
            ]
          ]
        },
        "RetentionInDays": 7
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Disconnect/LogRetention/Resource"
      }
    },
    "DisconnectDisconnectPermission933E876E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Disconnect7D6B12BD",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Disconnect/DisconnectPermission"
      }
    },
    "DisconnectIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "Api"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "Disconnect7D6B12BD",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/DisconnectIntegration"
      }
    },
    "DisconnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "Api"
        },
        "RouteKey": "$disconnect",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "DisconnectIntegration"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/DisconnectRoute"
      }
    },
    "ServiceRole4288B192": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Default/ServiceRole/Resource"
      }
    },
    "ServiceRoleDefaultPolicy94CF55F6": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "apigateway:*",
                "dynamodb:*",
                "execute-api:ManageConnections"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ServiceRoleDefaultPolicy94CF55F6",
        "Roles": [
          {
            "Ref": "ServiceRole4288B192"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Default/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "Resource": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4S3Bucket40E0E393"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4S3VersionKey32A15DAE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4S3VersionKey32A15DAE"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "ServiceRole4288B192",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "TableCD117FA1"
            }
          }
        },
        "Handler": "wsDefault.main",
        "MemorySize": 256,
        "Runtime": "nodejs12.x",
        "Timeout": 10
      },
      "DependsOn": [
        "ServiceRoleDefaultPolicy94CF55F6",
        "ServiceRole4288B192"
      ],
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Default/Resource",
        "aws:asset:path": "asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4",
        "aws:asset:property": "Code"
      }
    },
    "LogRetentionDD0A1FA1": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "Resource"
              }
            ]
          ]
        },
        "RetentionInDays": 7
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Default/LogRetention/Resource"
      }
    },
    "DefaultPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Resource",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/Default/DefaultPermission"
      }
    },
    "DefaultIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "Api"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "Resource",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/DefaultIntegration"
      }
    },
    "DefaultRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "Api"
        },
        "RouteKey": "$default",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "DefaultIntegration"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "admin-notes-debug-stack/DefaultRoute"
      }
    }
  },
  "Parameters": {
    "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3Bucket4842F32D": {
      "Type": "String",
      "Description": "S3 bucket for asset \"1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1\""
    },
    "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1S3VersionKeyD0A0B57A": {
      "Type": "String",
      "Description": "S3 key for asset version \"1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1\""
    },
    "AssetParameters1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1ArtifactHash0128B949": {
      "Type": "String",
      "Description": "Artifact hash for asset \"1f7e277bd526ebce1983fa1e7a84a5281ec533d9187caaebb773681bbf7bf4c1\""
    },
    "AssetParameters0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4S3Bucket40E0E393": {
      "Type": "String",
      "Description": "S3 bucket for asset \"0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4\""
    },
    "AssetParameters0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4S3VersionKey32A15DAE": {
      "Type": "String",
      "Description": "S3 key for asset version \"0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4\""
    },
    "AssetParameters0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4ArtifactHashC679FCC4": {
      "Type": "String",
      "Description": "Artifact hash for asset \"0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4\""
    },
    "AssetParametersb120b13d9d868c7622e7db1b68bae4c0f82ffd0227b8c15f2cef38e186ff3827S3Bucket2070BA0A": {
      "Type": "String",
      "Description": "S3 bucket for asset \"b120b13d9d868c7622e7db1b68bae4c0f82ffd0227b8c15f2cef38e186ff3827\""
    },
    "AssetParametersb120b13d9d868c7622e7db1b68bae4c0f82ffd0227b8c15f2cef38e186ff3827S3VersionKeyB95D17C3": {
      "Type": "String",
      "Description": "S3 key for asset version \"b120b13d9d868c7622e7db1b68bae4c0f82ffd0227b8c15f2cef38e186ff3827\""
    },
    "AssetParametersb120b13d9d868c7622e7db1b68bae4c0f82ffd0227b8c15f2cef38e186ff3827ArtifactHash1355580A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"b120b13d9d868c7622e7db1b68bae4c0f82ffd0227b8c15f2cef38e186ff3827\""
    }
  },
  "Outputs": {
    "Endpoint": {
      "Value": {
        "Fn::Join": [
          "",
          [
            {
              "Fn::GetAtt": [
                "Api",
                "ApiEndpoint"
              ]
            },
            "/admin"
          ]
        ]
      }
    },
    "BucketArn": {
      "Value": {
        "Fn::GetAtt": [
          "Bucket83908E77",
          "Arn"
        ]
      }
    },
    "BucketName": {
      "Value": {
        "Ref": "Bucket83908E77"
      }
    }
  }
}